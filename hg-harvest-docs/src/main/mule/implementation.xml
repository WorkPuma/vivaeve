<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:s3="http://www.mulesoft.org/schema/mule/s3" xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:os="http://www.mulesoft.org/schema/mule/os"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/s3 http://www.mulesoft.org/schema/mule/s3/current/mule-s3.xsd">
	<flow name="implementationFlow" doc:id="2c8b5d25-e3cf-488b-8037-7f62a12a4931" maxConcurrency="2">
		<s3:new-object-listener doc:name="On Object created in PatientPolling" doc:id="0f6ba310-9967-4b74-a437-395d7e4efd3e" config-ref="Amazon_S3_Configuration" bucketName="${aws.s3.bucket}" folder="${aws.s3.pollingFolder}" queueName="${aws.s3.bucket}-${aws.s3.pollingFolder}">
			<scheduling-strategy >
				<fixed-frequency frequency="${aws.s3.pollingFrequency}"/>
			</scheduling-strategy>
		</s3:new-object-listener>
		<set-variable value='#[(payload.key default "") as String]' doc:name="objectKey from payload" doc:id="6798f5dd-ff71-4b56-a384-8d409306227d" variableName="objectKey"/>
		<set-variable value="#[%dw 2.0&#10;import p from Mule&#10;import remove from dw::core::Strings&#10;&#10;output application/json&#10;---&#10;vars.objectKey remove (p('aws.s3.pollingFolder') ++ '/') remove &quot;.json&quot;]" doc:name="healthGorillaPatientId from objectKey" doc:id="4a14d957-3145-4ce4-ae7b-b6ce070b2425" variableName="healthGorillaPatientId"/>
		<set-variable value='#[%dw 2.0&#10;output text/plain&#10;---&#10;"HealthGorillaCache/Patient/$(vars.healthGorillaPatientId default "").json"]' doc:name="cacheObjectName" doc:id="70294cfa-de90-4862-aee2-e772d411f9ac" variableName="cacheObjectName"/>
		<try doc:name="Try" doc:id="2b9f626f-94d8-4950-a616-3da69c9095a8" >
			<flow-ref doc:name="HealthGorillaGetElationPatientId" doc:id="5b8246b8-3240-4a82-9fd2-8c74dcc0a426" name="HealthGorillaGetElationPatientId" />
			<error-handler >
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="0384962d-cf9b-4d93-8fd1-6936e19218e1" type="ANY">
					<logger level="INFO" doc:name="Logger" doc:id="5ee04117-dabf-48ec-87f3-b121bc9ca7cc" message='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	"AppName": app.name,&#10;	"FlowName" : flow.name,&#10;	"HealthGorillaPatientId": vars.healthGorillaPatientId default "",&#10;	"ElationPatientId": "",&#10;    "LogMessage" : error.description&#10;}]'/>
				</on-error-continue>
			</error-handler>
		</try>
		<logger level="INFO" doc:name="Logger" doc:id="8549ede9-8747-4072-8a6f-5f63f3a258b9" message='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	"AppName": app.name,&#10;	"FlowName" : flow.name,&#10;	"HealthGorillaPatientId": vars.healthGorillaPatientId default "",&#10;	"ElationPatientId": vars.elationPatientId default "",&#10;    "LogMessage" : "Starting document harvest for patient: $(vars.healthGorillaPatientId default "") to AWS S3... "&#10;}]'/>
		<set-variable value='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	"offset": 0,&#10;	"lastUpdated": "1900-01-01"&#10;}]' doc:name="documentHarvestCacheInfo" doc:id="d972524e-8732-4637-b2cd-af7372fb448e" variableName="documentHarvestCacheInfo"/>
		<try doc:name="Try" doc:id="42da554f-ec24-4a11-8f16-f2170f1ff06d" >
			<s3:get-object doc:name="Get Patient Cache Object" doc:id="39ac9df7-2ea3-470d-a2ee-c51198d9cd71" config-ref="Amazon_S3_Configuration" bucketName="${aws.s3.bucket}" key="#[vars.cacheObjectName]" outputMimeType="application/json" />
			<set-variable value="#[payload]" doc:name="documentHarvestCacheInfo" doc:id="5d68f482-34e3-4f20-96d5-41c719f28e39" variableName="documentHarvestCacheInfo"/>
			<error-handler >
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="96c193b7-b072-4e6a-a21e-ccfbc0d2d9d0" type="S3:NO_SUCH_KEY"/>
			</error-handler>
		</try>
		<try doc:name="Try" doc:id="7180eedf-d2b6-4e97-ad87-f041172cbe4f" >
			<flow-ref doc:name="HealthGorillaHarvestDocuments" doc:id="c371b8b6-1dee-4563-81fb-2f8165224199" name="HealthGorillaHarvestDocuments" />
			<error-handler >
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="03b69be6-e0d3-4859-9813-5786c745163c" type="MULE:RETRY_EXHAUSTED">
					<logger level="INFO" doc:name="Logger" doc:id="cc3aaeae-0eb9-4622-8c81-028d3459fbc7" message='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	"AppName": app.name,&#10;	"FlowName" : flow.name,&#10;	"HealthGorillaPatientId": vars.healthGorillaPatientId default "",&#10;	"ElationPatientId": vars.elationPatientId default "",&#10;    "LogMessage" : "The maximum number or retries has been exceeded"&#10;}]'/>
				</on-error-propagate>
			</error-handler>
		</try>
		<s3:delete-object doc:name="Delete Object from PatientPolling" doc:id="ef82126e-b1a0-4b24-8634-39dcda0f393a" config-ref="Amazon_S3_Configuration" bucketName="${aws.s3.bucket}" key="#[vars.objectKey]"/>
		<logger level="INFO" doc:name="Logger" doc:id="5426362c-bc0c-457d-adf1-e96f3691f361" message='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	"AppName": app.name,&#10;	"FlowName" : flow.name,&#10;	"HealthGorillaPatientId": vars.healthGorillaPatientId default "",&#10;	"ElationPatientId": vars.elationPatientId default "",&#10;    "LogMessage" : "...finished document harvest for patient: $(vars.healthGorillaPatientId default "")"&#10;}]'/>
		<error-handler ref="global-error-handlerError_Handler" />
	</flow>
</mule>

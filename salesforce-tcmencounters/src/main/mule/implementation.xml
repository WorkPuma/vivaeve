<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:snowflake="http://www.mulesoft.org/schema/mule/snowflake"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:tls="http://www.mulesoft.org/schema/mule/tls" xmlns:s3="http://www.mulesoft.org/schema/mule/s3" xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/s3 http://www.mulesoft.org/schema/mule/s3/current/mule-s3.xsd
http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/snowflake http://www.mulesoft.org/schema/mule/snowflake/current/mule-snowflake.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
<flow name="create-clinical-encounters" doc:id="d176aa52-9d04-420a-8b86-f865f2e31409" maxConcurrency="1">
		<scheduler doc:name="Trigger Create Clinical Encounters Flow Every 1 minute" doc:id="1eb73639-1abf-464e-8941-c70390868c87" >
			<scheduling-strategy >
				<fixed-frequency frequency="1" timeUnit="MINUTES"/>
			</scheduling-strategy>
		</scheduler>
		<os:retrieve doc:name="Retrieve DeltaFlowState value" doc:id="5bedbcf2-db15-4c59-9c47-d385a110f299" key="DeltaFlowState" target="deltaFlowState">
			<os:default-value ><![CDATA[#[""]]]></os:default-value>
		</os:retrieve>
		<choice doc:name="Is delta-flow running?" doc:id="80516208-083d-43ad-90f1-a4eaf35f7bf3" >
			<when expression='#[%dw 2.0&#10;output application/java&#10;---&#10;(vars.deltaFlowState default "") == "Running"]'>
				<logger level="INFO" doc:name="Log delta app currently running" doc:id="370831c8-3b0f-4da6-9294-5862ccca254d" message='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	"AppName": app.name,&#10;	"FlowName" : flow.name,&#10;    "LogMessage" : "This flow can not run because the delta-flow is currently running"&#10;}]'/>
			</when>
			<otherwise >
				<os:retrieve doc:name="Retrieve encounterCacheObject" doc:id="28c4f545-b10d-4aaa-a2a7-8589d228c98c" key="encounterCacheObject" target="encounterCacheObject">
			<os:default-value><![CDATA[#[%dw 2.0
output application/json
---
{
	"LastHarvestDateTime": null,
	"EncounterId": null,
	"DataSource": null
}]]]></os:default-value>
		</os:retrieve>
				<set-variable value="#[%dw 2.0&#10;import p from Mule&#10;output application/java&#10;---&#10;(p('encounterBatchSize') default 200) as Number]" doc:name="encounterBatchSize" doc:id="3fa32d53-670f-4d49-a424-b2721968f3a2" variableName="encounterBatchSize"/>
				<set-variable value="#[%dw 2.0&#10;import p from Mule&#10;output text/plain&#10;&#10;var sql = &quot;SELECT TOP $(vars.encounterBatchSize default 200)&#10;	ENCOUNTER_ID,&#10;	PATIENT_ID,&#10;	ENCOUNTER_TYPE,&#10;	TO_CHAR(ENCOUNTER_START_DATE) AS ENCOUNTER_START_DATE,&#10;	TO_CHAR(ENCOUNTER_END_DATE) AS ENCOUNTER_END_DATE,&#10;	ENCOUNTER_STATUS,&#10;	LENGTH_OF_STAY,&#10;	ADMIT_SOURCE_CODE,&#10;	ADMIT_SOURCE_DESCRIPTION,&#10;	DISCHARGE_DISPOSITION_CODE,&#10;	DISCHARGE_DISPOSITION_DESCRIPTION,&#10;	ATTENDING_PROVIDER_NPI,&#10;	FACILITY_NPI,&#10;	FACILITY_NAME,&#10;	PRIMARY_DIAGNOSIS_CODE_TYPE,&#10;	PRIMARY_DIAGNOSIS_CODE,&#10;	PRIMARY_DIAGNOSIS_DESCRIPTION,&#10;	PATIENT_TIER,&#10;	BAMBOO_MOBILE_PHONE,&#10;	BAMBOO_HOME_PHONE,&#10;	BAMBOO_PATIENT_PHONE,&#10;	MNEAS_PATIENT_PHONE,&#10;	MNEAS_HOME_PHONE,&#10;	MNEAS_CELL_PHONE,&#10;	MNEAS_WORK_PHONE,&#10;	READMISSION_FLAG,&#10;	INDEX_ADMISSION,&#10;	DATA_SOURCE,&#10;	TUVA_LAST_RUN,&#10;	MD5(IFNULL(ADMIT_SOURCE_CODE,'')&#10;||IFNULL(ADMIT_SOURCE_DESCRIPTION,'')&#10;||IFNULL(ATTENDING_PROVIDER_NPI,'')&#10;||IFNULL(BAMBOO_HOME_PHONE,'')&#10;||IFNULL(BAMBOO_MOBILE_PHONE,'')&#10;||IFNULL(BAMBOO_PATIENT_PHONE,'')&#10;||IFNULL(DISCHARGE_DISPOSITION_CODE,'')&#10;||IFNULL(DISCHARGE_DISPOSITION_DESCRIPTION,'')&#10;||IFNULL(ENCOUNTER_START_DATE,'1900-01-01')&#10;||IFNULL(ENCOUNTER_END_DATE,'1900-01-01')&#10;||IFNULL(ENCOUNTER_STATUS,'')&#10;||IFNULL(ENCOUNTER_TYPE,'')&#10;||IFNULL(FACILITY_NAME,'')&#10;||IFNULL(FACILITY_NPI,'')&#10;||IFNULL(INDEX_ADMISSION,'')&#10;||IFNULL(LENGTH_OF_STAY,-1)&#10;||IFNULL(MNEAS_CELL_PHONE,'')&#10;||IFNULL(MNEAS_HOME_PHONE,'')&#10;||IFNULL(MNEAS_PATIENT_PHONE,'')&#10;||IFNULL(MNEAS_WORK_PHONE,'')&#10;||IFNULL(PATIENT_TIER,'')&#10;||IFNULL(PRIMARY_DIAGNOSIS_CODE,'')&#10;||IFNULL(PRIMARY_DIAGNOSIS_CODE_TYPE,'')&#10;||IFNULL(PRIMARY_DIAGNOSIS_DESCRIPTION,'')&#10;||IFNULL(READMISSION_FLAG,-1)) AS MD5Hash&#10;FROM&#10;	TCM_TRANSITION&#10;WHERE&#10;	IFNULL(ENCOUNTER_END_DATE, current_date) &gt;= DATEADD(Day ,-($(p('encounterDischargeDaysBack') default 2)), current_date)&quot;&#10;	&#10;	var appendedSql =&#10;		if (!isEmpty(vars.encounterCacheObject.LastHarvestDateTime) and !isEmpty(vars.encounterCacheObject.DataSource) and !isEmpty(vars.encounterCacheObject.EncounterId))&#10;			sql ++ &quot;&#10;				AND TUVA_LAST_RUN = '$(vars.encounterCacheObject.LastHarvestDateTime)'&#10;				AND (&#10;						LOWER(DATA_SOURCE) &gt; LOWER('$(vars.encounterCacheObject.DataSource)')&#10;						OR (&#10;								LOWER(ENCOUNTER_ID) &gt; LOWER('$(vars.encounterCacheObject.EncounterId)')&#10;								AND LOWER(DATA_SOURCE) = LOWER('$(vars.encounterCacheObject.DataSource)')&#10;							)&#10;					)&quot;&#10;		else sql ++ &quot; AND TUVA_LAST_RUN &gt; '$(vars.encounterCacheObject.LastHarvestDateTime default &quot;1900-01-01&quot;)'&quot;&#10;		&#10;	var finalQuery = appendedSql ++ &quot; ORDER BY TUVA_LAST_RUN, DATA_SOURCE, ENCOUNTER_ID asc;&quot;&#10;---&#10;finalQuery]" doc:name="selectEncounterSql" doc:id="9c897d9e-3fac-4d7b-89b5-175f3fdc3c6f" variableName="selectEncounterSql" />
				<snowflake:select doc:name="Select encounters" doc:id="2641e181-4a45-4ca8-9b2b-83304c454c9d" config-ref="Herself_Health_Snowflake_Config" target="encounters">
					<snowflake:sql><![CDATA[#[vars.selectEncounterSql]]]></snowflake:sql>
						</snowflake:select>
				<choice doc:name="Are there any encounters?" doc:id="9da8bce3-d2d9-4749-a023-e5806f2c12fa">
					<when expression="#[sizeOf(vars.encounters) == 0]">
						<os:store doc:name="Reset encounter cache object EncounterId and DataSource" doc:id="7a142eaf-7be2-4859-a5ac-ce1a4c90fbbd" key="encounterCacheObject">
							<os:value ><![CDATA[#[%dw 2.0
output application/json
---
{
	"LastHarvestDateTime": vars.encounterCacheObject.LastHarvestDateTime,
	"EncounterId": null,
	"DataSource": null,
}]]]></os:value>
						</os:store>
					</when>
					<otherwise >
						<logger level="INFO" doc:name="Log job started" doc:id="c816bf14-19c5-4c90-ab20-f345c748f2b9" message='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	"AppName": app.name,&#10;	"FlowName" : flow.name,&#10;    "LogMessage" : "create-clinical-encounters started..."&#10;}]' />
						<logger level="INFO" doc:name="Log number of encounters found" doc:id="80183471-9fbe-41fa-9f35-3444305b097c" message='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	"AppName": app.name,&#10;	"FlowName" : flow.name,&#10;    "LogMessage" : "$(sizeOf(vars.encounters)) encounters selected"&#10;}]' />
						<http:request method="POST" doc:name="Get Salesforce OAuth Token" doc:id="8eff3236-dd80-493d-abd6-37de433ebc8d" config-ref="Salesforce_Auth_HTTP_Request_configuration" path="/token">
							<http:body><![CDATA[#[%dw 2.0
import p from Mule
output application/x-www-form-urlencoded
---
{
	"grant_type": "password",
	"client_id": p('secure::sf.clientId'),
	"client_secret": p('secure::sf.clientSecret'),
	"username": p('sf.name'),
	"password": p('secure::sf.pwd') ++ p('secure::sf.token')
}]]]></http:body>
							<http:response-validator >
								<http:success-status-code-validator values="200" />
							</http:response-validator>
		</http:request>
						<set-variable value="#[payload.access_token]" doc:name="salesforceAccessToken" doc:id="9013d2fe-b729-49e1-a80b-bfcb4422b20f" variableName="salesforceAccessToken" />
						<parallel-foreach doc:name="Parallel For Each" doc:id="32234549-2c56-4be2-bb43-7343de107df9" maxConcurrency="50" collection="#[vars.encounters]">
							<try doc:name="Try" doc:id="e590692c-e865-4e05-bbf1-21836818afaf">
						<logger level="INFO" doc:name="Log start of processing encounter" doc:id="f5ecbfcb-125b-4db2-98f6-5661514237eb" message='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	"AppName": app.name,&#10;	"FlowName" : flow.name,&#10;	"EncounterId": payload.ENCOUNTER_ID default "",&#10;	"ElationPatientId": payload.PATIENT_ID default "",&#10;    "LogMessage" : "Processing encounter $(payload.ENCOUNTER_ID default "")..."&#10;}]' />
								<set-variable value="#[payload]" doc:name="encounter" doc:id="172e6456-0a64-4f37-83f1-033e98fce7a5" variableName="encounter" />
								<validation:is-true doc:name="Validate encounter has PATIENT_ID" doc:id="4145f8fe-30b4-47bf-a1b4-7cdcb860a694" expression="#[!isEmpty(vars.encounter.PATIENT_ID)]" message="PATIENT_ID not found" />
								<db:select doc:name="Get encounter mapping from SQL cache" doc:id="fb087b7b-2f86-4aa0-b3bb-7d99e330d8ad" config-ref="Herself_Health_Database_Config">
									<non-repeatable-iterable />
									<db:sql ><![CDATA[SELECT TOP 1
	TuvaEncounterId,
	TuvaDataSource,
	SalesforceClinicalEncounterId,
	TuvaMd5Hash
FROM
	tuva_to_salesforce.EncounterMapping
WHERE
	TuvaEncounterId = :TuvaEncounterId
	AND TuvaDataSource = :DataSource]]></db:sql>
									<db:input-parameters ><![CDATA[#[{
	"TuvaEncounterId": vars.encounter.ENCOUNTER_ID,
	"DataSource": vars.encounter.DATA_SOURCE
}]]]></db:input-parameters>
								</db:select>
								<set-variable value="#[%dw 2.0&#10;output application/json&#10;---&#10;payload[0]]" doc:name="encounterMapping" doc:id="e9899f6c-e3cb-477c-9949-7dfaa5c9af63" variableName="encounterMapping"/>
								<choice doc:name="MD5 hash exists?" doc:id="dfe6da37-74ea-4d94-8aa0-caaf9efde212" >
									<when expression="#[!isEmpty(vars.encounterMapping.TuvaMd5Hash) and vars.encounterMapping.TuvaMd5Hash == vars.encounter.Md5Hash]">
										<logger level="INFO" doc:name="Log skipping encounter" doc:id="84bb3113-4527-4f91-b0dc-c11ec4144937" message='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	"AppName": app.name,&#10;	"FlowName" : flow.name,&#10;	"EncounterId": vars.encounter.ENCOUNTER_ID default "",&#10;	"ElationPatientId": vars.encounter.PATIENT_ID default "",&#10;    "LogMessage" : "Skipping encounter because the MD5 hash already exists"&#10;}]'/>
									</when>
									<otherwise >
										<salesforce:query doc:name="Lookup Account by MRN" doc:id="c54da6ee-1b3e-48ff-827c-6c4fdcc3ad70" config-ref="Salesforce_Config_client">
											<reconnect />
											<salesforce:salesforce-query><![CDATA[SELECT
	Id
FROM
	Account
WHERE
	HealthCloudGA__MedicalRecordNumber__pc = ':PATIENT_ID'
	AND IsPersonAccount = TRUE]]></salesforce:salesforce-query>
									<salesforce:parameters><![CDATA[#[output application/java
---
{
	"PATIENT_ID" : vars.encounter.PATIENT_ID
}]]]></salesforce:parameters>
								</salesforce:query>
										<set-variable value='#[payload[0].Id default ""]' doc:name="accountId" doc:id="48a93454-3405-4391-9e17-2ed87192324b" variableName="accountId"/>
										<validation:is-true doc:name="Validate Account exists" doc:id="1bf34298-de37-47e8-9dd7-e5ee56d42bb9" expression="#[!isEmpty(vars.accountId)]" message="Account not found in Salesforce" />
										<ee:transform doc:name="Encounter to ClinicalEncounter" doc:id="a921f4de-7285-4a24-90e2-1055fc284e5c">
									<ee:message>
										<ee:set-payload><![CDATA[%dw 2.0
import p from Mule
import mapEncounterToClinicalEncounter from dwl::mappings
		
output application/json  skipNullOn = "everywhere"
---
mapEncounterToClinicalEncounter(vars.encounter, vars.encounterMapping.SalesforceClinicalEncounterId default "", vars.accountId, p('sf.clinicalEncounter.defaultRecordTypeId') as String)]]></ee:set-payload>
									</ee:message>
								</ee:transform>
										<flow-ref doc:name="UpsertClinicalEncounterToSalesforce" doc:id="e6df59a1-79ed-4304-8ffa-52346decbf95" name="UpsertClinicalEncounterToSalesforce" />
										<set-variable value='#[payload.id]' doc:name="clinicalEncounterId" doc:id="64e87f6f-3586-45f9-bfeb-2d024caebbe6" variableName="clinicalEncounterId" />
										<flow-ref doc:name="UpsertEncounterMapping" doc:id="0ddef905-06ab-48c4-a03e-61ac0e528751" name="UpsertEncounterMapping"/>
									</otherwise>
								</choice>
								<logger level="INFO" doc:name="Log end of processing encounter" doc:id="bf8bc71a-4267-424c-97d7-b3c1b131f696" message='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	"AppName": app.name,&#10;	"FlowName" : flow.name,&#10;	"EncounterId": vars.encounter.ENCOUNTER_ID default "",&#10;	"ElationPatientId": vars.encounter.PATIENT_ID default "",&#10;	"SalesforceAccountId": vars.accountId default "",&#10;    "LogMessage" : "...Finished processing encounter $(vars.encounter.ENCOUNTER_ID default "")"&#10;}]'/>
								<error-handler>
									<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="b1937139-1151-4683-a14a-1a5463d6ef53" >
										<logger level="INFO" doc:name="Log error details" doc:id="99430e5d-37c3-44c8-bad3-6b0d9835258a" message='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	"AppName": app.name,&#10;	"FlowName" : flow.name,&#10;	"EncounterId": vars.encounter.ENCOUNTER_ID default "",&#10;	"ElationPatientId": vars.encounter.PATIENT_ID default "",&#10;	"SalesforceAccountId": vars.accountId default "",&#10;    "LogMessage" : error.description&#10;}]' />
									</on-error-continue>
						
</error-handler>
					</try>

						</parallel-foreach>
						<choice doc:name="Is number of encounters less then batch size?" doc:id="f8023bf1-a313-4992-928f-3e33fa0d13d5">
							<when expression="#[sizeOf(vars.encounters) &lt; vars.encounterBatchSize]">
								<os:store doc:name="Reset encounter cache object EncounterId and DataSource" doc:id="09b60915-9dcd-4f95-b95b-d3d10df42b3e" key="encounterCacheObject" >
									<os:value ><![CDATA[#[%dw 2.0
output application/json
var lastEncounter = vars.encounters[-1]
---
{
	"LastHarvestDateTime": lastEncounter.TUVA_LAST_RUN,
	"EncounterId": null,
	"DataSource": null,
}]]]></os:value>
								</os:store>
							</when>
							<otherwise >
								<os:store doc:name="Store encounter cache object" doc:id="303c2317-8411-4174-940f-58f2ad08dba5" key="encounterCacheObject">
					<os:value><![CDATA[#[%dw 2.0
output application/json
var lastEncounter = vars.encounters[-1]
---
{
	"LastHarvestDateTime": lastEncounter.TUVA_LAST_RUN,
	"EncounterId": lastEncounter.ENCOUNTER_ID,
	"DataSource": lastEncounter.DATA_SOURCE,
}]]]></os:value>
				</os:store>
							</otherwise>
						</choice>
						<logger level="INFO" doc:name="Log job finished" doc:id="450f4a7b-38f7-4305-9b00-70b9b69a49ed" message='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	"AppName": app.name,&#10;	"FlowName" : flow.name,&#10;    "LogMessage" : "...create-clinical-encounters finished"&#10;}]' />
					</otherwise>
				</choice>
			
</otherwise>
		</choice>
		<error-handler ref="global-error-handlerError_Handler" />
	</flow>
	<sub-flow name="UpsertClinicalEncounterToSalesforce" doc:id="b4c0b85a-19e2-4755-b6a4-26690694e85b" >
		<choice doc:name="Is there a Salesforce ClinicalEncounter Id?" doc:id="47d9cd40-34a7-4117-882f-6a0afed1c319" >
			<when expression='#[!isEmpty(payload.Id default "")]'>
				<set-variable value="#[payload.Id]" doc:name="id" doc:id="22f7fd85-b2c2-46ab-ad77-c1a07a3bc10d" variableName="id"/>
				<ee:transform doc:name="Remove Id from payload" doc:id="24b4d0ee-3866-4bdc-8f3f-b7d2063eb1d7">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload -"Id"]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<http:request method="PATCH" doc:name="Update ClinicalEncounter" doc:id="fe0d2ad3-b601-4250-b567-0e1e2f3e86ac" config-ref="Salesforce_REST_HTTP_Request_configuration" path="/sobjects/ClinicalEncounter/{id}">
					<http:headers ><![CDATA[#[output application/java
---
{
	"Authorization" : "Bearer " ++ vars.salesforceAccessToken
}]]]></http:headers>
					<http:uri-params ><![CDATA[#[output application/java
---
{
	"id" : vars.id
}]]]></http:uri-params>
				</http:request>
				<set-payload value="#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	id: vars.id&#10;}]" doc:name="Set Payload to Id" doc:id="56804763-55a8-45a3-93e1-0d4bf15180a8" />
				<remove-variable doc:name="id" doc:id="8b96249c-0fa6-473f-8f22-3649f9e69599" variableName="id"/>
				<logger level="INFO" doc:name="Log ClinicalEncounter updated" doc:id="5821a579-3c40-484c-b60a-68973aae9330" message='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	"AppName": app.name,&#10;	"FlowName" : flow.name,&#10;	"EncounterId": vars.encounter.ENCOUNTER_ID default "",&#10;	"ElationPatientId": vars.encounter.PATIENT_ID default "",&#10;	"SalesforceAccountId": vars.accountId default "",&#10;    "LogMessage" : "ClinicalEncounter updated"&#10;}]'/>
			</when>
			<otherwise >
				<http:request method="POST" doc:name="Insert ClinicalEncounter" doc:id="f80fe5b9-af12-4177-b158-66ea6117d94a" config-ref="Salesforce_REST_HTTP_Request_configuration" path="/sobjects/ClinicalEncounter">
					<http:headers ><![CDATA[#[output application/java
---
{
	"Authorization" : "Bearer " ++ vars.salesforceAccessToken
}]]]></http:headers>
					<http:response-validator >
						<http:success-status-code-validator values="201" />
					</http:response-validator>
				</http:request>
				<logger level="INFO" doc:name="LogLog ClinicalEncounter inserted" doc:id="65f470d4-9b46-4c99-b629-880c6d6a87eb" message='#[%dw 2.0&#10;output application/json&#10;---&#10;{&#10;	"AppName": app.name,&#10;	"FlowName" : flow.name,&#10;	"EncounterId": vars.encounter.ENCOUNTER_ID default "",&#10;	"ElationPatientId": vars.encounter.PATIENT_ID default "",&#10;	"SalesforceAccountId": vars.accountId default "",&#10;    "LogMessage" : "ClinicalEncounter inserted"&#10;}]'/>
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="UpsertEncounterMapping" doc:id="945ffc26-c0a5-4edb-a7f9-4cff32a5e26e" >
		<choice doc:name="Does encounterMapping exist?" doc:id="7ed29227-6279-4608-84dc-c91d63bfb9c5" >
			<when expression="#[!isEmpty(vars.encounterMapping)]">
				<db:update doc:name="Update tuva_to_salesforce.EncounterMapping" doc:id="b294ae03-18d5-46d9-8d78-d37f9298433f" config-ref="Herself_Health_Database_Config">
					<db:sql ><![CDATA[UPDATE tuva_to_salesforce.EncounterMapping
	SET TuvaMd5Hash = :TuvaMd5Hash
WHERE
	 TuvaEncounterId = :TuvaEncounterId
	 AND TuvaDataSource = :TuvaDataSource
	 AND SalesforceClinicalEncounterId = :SalesforceClinicalEncounterId]]></db:sql>
					<db:input-parameters ><![CDATA[#[{
	TuvaEncounterId: vars.encounterMapping.TuvaEncounterId,
	TuvaDataSource: vars.encounterMapping.TuvaDataSource,
	SalesforceClinicalEncounterId: vars.encounterMapping.SalesforceClinicalEncounterId,
	TuvaMd5Hash: vars.encounter.MD5HASH default ""
}]]]></db:input-parameters>
				</db:update>
			</when>
			<otherwise >
				<db:insert doc:name="Insert tuva_to_salesforce.EncounterMapping" doc:id="26543acd-aa31-42b9-a129-b239b9e6f05c" config-ref="Herself_Health_Database_Config">
					<db:sql ><![CDATA[INSERT INTO tuva_to_salesforce.EncounterMapping (TuvaEncounterId,TuvaDataSource,SalesforceClinicalEncounterId,TuvaMd5Hash)
VALUES (:TuvaEncounterId,:TuvaDataSource,:SalesforceClinicalEncounterId,:TuvaMd5Hash)]]></db:sql>
					<db:input-parameters ><![CDATA[#[{
	"TuvaEncounterId": vars.encounter.ENCOUNTER_ID,
	"TuvaDataSource": vars.encounter.DATA_SOURCE,
	"SalesforceClinicalEncounterId": vars.clinicalEncounterId,
	"TuvaMd5Hash": vars.encounter.MD5Hash
}]]]></db:input-parameters>
				</db:insert>
			</otherwise>
		</choice>
	</sub-flow>
</mule>

<?xml version="1.0" encoding="UTF-8"?>
<extension-documentation>
    <configs>
        <config name="snowflake-config">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="name">
                    <description><![CDATA[The identifier of this element used to reference it in other components]]></description>
                </parameter>
                <parameter name="expirationPolicy">
                    <description><![CDATA[Configures the minimum amount of time that a dynamic configuration instance can remain idle before the runtime considers it eligible for expiration. This does not mean that the platform will expire the instance at the exact moment that it becomes eligible. The runtime will actually purge the instances when it sees it fit.]]></description>
                </parameter>
            </parameters>
        </config>
    </configs>
    <connections>
        <connection name="keypair-connection">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="poolingProfile">
                    <description><![CDATA[Provides a way to configure database connection pooling.]]></description>
                </parameter>
                <parameter name="accountName">
                    <description><![CDATA[Snowflake account]]></description>
                </parameter>
                <parameter name="warehouse">
                    <description><![CDATA[Snowflake warehouse]]></description>
                </parameter>
                <parameter name="database">
                    <description><![CDATA[Snowflake database]]></description>
                </parameter>
                <parameter name="schema">
                    <description><![CDATA[Snowflake database schema]]></description>
                </parameter>
                <parameter name="user">
                    <description><![CDATA[Database username]]></description>
                </parameter>
                <parameter name="role">
                    <description><![CDATA[User role]]></description>
                </parameter>
                <parameter name="privateKeyFile">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="privateKeyPassword">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="reconnection">
                    <description><![CDATA[When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy]]></description>
                </parameter>
            </parameters>
        </connection>
        <connection name="snowflake-connection">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="poolingProfile">
                    <description><![CDATA[Provides a way to configure database connection pooling.]]></description>
                </parameter>
                <parameter name="accountName">
                    <description><![CDATA[Snowflake account]]></description>
                </parameter>
                <parameter name="warehouse">
                    <description><![CDATA[Snowflake warehouse]]></description>
                </parameter>
                <parameter name="database">
                    <description><![CDATA[Snowflake database]]></description>
                </parameter>
                <parameter name="schema">
                    <description><![CDATA[Snowflake database schema]]></description>
                </parameter>
                <parameter name="user">
                    <description><![CDATA[Database username]]></description>
                </parameter>
                <parameter name="role">
                    <description><![CDATA[User role]]></description>
                </parameter>
                <parameter name="password">
                    <description><![CDATA[Database password]]></description>
                </parameter>
                <parameter name="reconnection">
                    <description><![CDATA[When the application is deployed, a connectivity test is performed on all connectors. If set to true, deployment will fail if the test doesn't pass after exhausting the associated reconnection strategy]]></description>
                </parameter>
            </parameters>
        </connection>
    </connections>
    <extension name="Snowflake">
        <description><![CDATA[This is the main class of an extension, is the entry point from which configurations, connection providers, operation and sources are going to be declared.]]></description>
        <parameters/>
    </extension>
    <operations>
        <operation name="bulkDelete">
            <description><![CDATA[Allows executing one delete statement various times using different parameter bindings. This happens using one single Database statement, which has performance advantages compared to executing one single delete operation various times.]]></description>
            <parameters>
                <parameter name="bulkInputParameters">
                    <description><![CDATA[A List of Maps in which every list item represents a row to be deleted, and the map contains the parameter names as keys and the value the parameter is bound to.]]></description>
                </parameter>
                <parameter name="config-ref">
                    <description><![CDATA[The name of the configuration to be used to execute this component]]></description>
                </parameter>
                <parameter name="transactionalAction">
                    <description><![CDATA[The type of joining action that operations can take regarding transactions.]]></description>
                </parameter>
                <parameter name="queryTimeout">
                    <description><![CDATA[Indicates the minimum amount of time before the JDBC driver attempts to cancel a running statement. No timeout is used by default.]]></description>
                </parameter>
                <parameter name="queryTimeoutUnit">
                    <description><![CDATA[A TimeUnit which qualifies the #queryTimeout]]></description>
                </parameter>
                <parameter name="fetchSize">
                    <description><![CDATA[Indicates how many rows to fetch from the database when rows are read from a resultSet. This property is required when streaming is true; in that case a default value (10) is used.]]></description>
                </parameter>
                <parameter name="maxRows">
                    <description><![CDATA[Sets the limit for the maximum number of rows that any ResultSet object generated by this message processor can contain for the given number. If the limit is exceeded, the excess rows are silently dropped.]]></description>
                </parameter>
                <parameter name="sql">
                    <description><![CDATA[The text of the SQL query to be executed]]></description>
                </parameter>
                <parameter name="parameterTypes">
                    <description><![CDATA[Allows to optionally specify the type of one or more of the parameters in the query. If provided, you're not even required to reference all of the parameters, but you cannot reference a parameter not present in the input values]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="bulkInsert">
            <description><![CDATA[Allows executing one insert statement various times using different parameter bindings. This happens using one single Database statement, which has performance advantages compared to executing one single insert operation various times.]]></description>
            <parameters>
                <parameter name="bulkInputParameters">
                    <description><![CDATA[A List of Maps in which every list item represents a row to be inserted, and the map contains the parameter names as keys and the value the parameter is bound to.]]></description>
                </parameter>
                <parameter name="config-ref">
                    <description><![CDATA[The name of the configuration to be used to execute this component]]></description>
                </parameter>
                <parameter name="transactionalAction">
                    <description><![CDATA[The type of joining action that operations can take regarding transactions.]]></description>
                </parameter>
                <parameter name="queryTimeout">
                    <description><![CDATA[Indicates the minimum amount of time before the JDBC driver attempts to cancel a running statement. No timeout is used by default.]]></description>
                </parameter>
                <parameter name="queryTimeoutUnit">
                    <description><![CDATA[A TimeUnit which qualifies the #queryTimeout]]></description>
                </parameter>
                <parameter name="fetchSize">
                    <description><![CDATA[Indicates how many rows to fetch from the database when rows are read from a resultSet. This property is required when streaming is true; in that case a default value (10) is used.]]></description>
                </parameter>
                <parameter name="maxRows">
                    <description><![CDATA[Sets the limit for the maximum number of rows that any ResultSet object generated by this message processor can contain for the given number. If the limit is exceeded, the excess rows are silently dropped.]]></description>
                </parameter>
                <parameter name="sql">
                    <description><![CDATA[The text of the SQL query to be executed]]></description>
                </parameter>
                <parameter name="parameterTypes">
                    <description><![CDATA[Allows to optionally specify the type of one or more of the parameters in the query. If provided, you're not even required to reference all of the parameters, but you cannot reference a parameter not present in the input values]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="bulkUpdate">
            <description><![CDATA[Allows executing one update statement various times using different parameter bindings. This happens using one single Database statement, which has performance advantages compared to executing one single update operation various times.]]></description>
            <parameters>
                <parameter name="bulkInputParameters">
                    <description><![CDATA[A List of Maps in which every list item represents a row to be updated, and the map contains the parameter names as keys and the value the parameter is bound to.]]></description>
                </parameter>
                <parameter name="config-ref">
                    <description><![CDATA[The name of the configuration to be used to execute this component]]></description>
                </parameter>
                <parameter name="transactionalAction">
                    <description><![CDATA[The type of joining action that operations can take regarding transactions.]]></description>
                </parameter>
                <parameter name="queryTimeout">
                    <description><![CDATA[Indicates the minimum amount of time before the JDBC driver attempts to cancel a running statement. No timeout is used by default.]]></description>
                </parameter>
                <parameter name="queryTimeoutUnit">
                    <description><![CDATA[A TimeUnit which qualifies the #queryTimeout]]></description>
                </parameter>
                <parameter name="fetchSize">
                    <description><![CDATA[Indicates how many rows to fetch from the database when rows are read from a resultSet. This property is required when streaming is true; in that case a default value (10) is used.]]></description>
                </parameter>
                <parameter name="maxRows">
                    <description><![CDATA[Sets the limit for the maximum number of rows that any ResultSet object generated by this message processor can contain for the given number. If the limit is exceeded, the excess rows are silently dropped.]]></description>
                </parameter>
                <parameter name="sql">
                    <description><![CDATA[The text of the SQL query to be executed]]></description>
                </parameter>
                <parameter name="parameterTypes">
                    <description><![CDATA[Allows to optionally specify the type of one or more of the parameters in the query. If provided, you're not even required to reference all of the parameters, but you cannot reference a parameter not present in the input values]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="copyIntoLocation">
            <description><![CDATA[Unloads data from a table (or query) into one or more files.]]></description>
            <parameters>
                <parameter name="location">
                    <description><![CDATA[Specifies the internal or external location where the files containing data to be loaded are staged.]]></description>
                </parameter>
                <parameter name="tableQuerySource">
                    <description><![CDATA[Specifies the table or query used as the source of the data to be unloaded.]]></description>
                </parameter>
                <parameter name="fileFormatForCopyIntoLocation">
                    <description><![CDATA[Specifies the format of the data files to load.]]></description>
                </parameter>
                <parameter name="includeHeader">
                    <description><![CDATA[Specifies whether to include the table column headings in the output files.]]></description>
                </parameter>
                <parameter name="config-ref">
                    <description><![CDATA[The name of the configuration to be used to execute this component]]></description>
                </parameter>
                <parameter name="transactionalAction">
                    <description><![CDATA[The type of joining action that operations can take regarding transactions.]]></description>
                </parameter>
                <parameter name="overwrite">
                    <description><![CDATA[Boolean that specifies whether the COPY command overwrites existing files with matching names, if any, in the location where files are stored.]]></description>
                </parameter>
                <parameter name="single">
                    <description><![CDATA[Boolean that specifies whether to generate a single file or multiple files. If FALSE, a filename prefix must be included in path.]]></description>
                </parameter>
                <parameter name="maxFileSize">
                    <description><![CDATA[Number (&gt; 0) that specifies the upper size limit (in bytes) of each file to be generated in parallel per thread.]]></description>
                </parameter>
                <parameter name="includeQueryId">
                    <description><![CDATA[Boolean that specifies whether to uniquely identify unloaded files by including a universally unique identifier (UUID) in the filenames of unloaded data files.]]></description>
                </parameter>
                <parameter name="detailedOutput">
                    <description><![CDATA[Specifies whether to load data into columns in the target table that match corresponding columns represented in the data.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="copyIntoTable">
            <description><![CDATA[Loads data from staged files to an existing table. The files must already be staged in one of the following locations: - Named internal stage (or table/user stage). Files can be staged using the PUT command. - Named external stage that references an external location (Amazon S3, Google Cloud Storage, or Microsoft Azure). - External location (Amazon S3, Google Cloud Storage, or Microsoft Azure).]]></description>
            <parameters>
                <parameter name="destinationTable">
                    <description><![CDATA[Specifies the name of the table into which data is loaded.]]></description>
                </parameter>
                <parameter name="location">
                    <description><![CDATA[Specifies the internal or external location where the files containing data to be loaded are staged.]]></description>
                </parameter>
                <parameter name="files">
                    <description><![CDATA[Specifies a list of one or more files to load from a staged internal or external location.]]></description>
                </parameter>
                <parameter name="matchingPattern">
                    <description><![CDATA[Specifies the file names or paths to match based on a regex pattern.]]></description>
                </parameter>
                <parameter name="fileFormatForCopyIntoTable">
                    <description><![CDATA[Specifies the format of the data files to load.]]></description>
                </parameter>
                <parameter name="validationMode">
                    <description><![CDATA[Specifies that the load operation should only validate data and return the results based on validation options rather than loading data into the specified table.]]></description>
                </parameter>
                <parameter name="config-ref">
                    <description><![CDATA[The name of the configuration to be used to execute this component]]></description>
                </parameter>
                <parameter name="transactionalAction">
                    <description><![CDATA[The type of joining action that operations can take regarding transactions.]]></description>
                </parameter>
                <parameter name="onError">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="sizeLimit">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="purge">
                    <description><![CDATA[Specifies whether to remove the data files from the stage automatically after the data is loaded successfully.]]></description>
                </parameter>
                <parameter name="returnFailedOnly">
                    <description><![CDATA[Specifies whether to return only files that have failed to load in the statement result.]]></description>
                </parameter>
                <parameter name="matchByColumnName">
                    <description><![CDATA[Specifies whether to load data into columns in the target table that match corresponding columns represented in the data.]]></description>
                </parameter>
                <parameter name="enforceLength">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="truncateColumns">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="force">
                    <description><![CDATA[Specifies to load all files, regardless of whether they've been loaded previously and have not changed since they were loaded.]]></description>
                </parameter>
                <parameter name="loadUncertainFiles">
                    <description><![CDATA[Specifies to load files for which the load status is unknown.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="copyIntoTableWithTransformation">
            <description><![CDATA[Loads data from staged files to an existing table. The files must already be staged in one of the following locations: - Named internal stage (or table/user stage). Files can be staged using the PUT command. - Named external stage that references an external location (Amazon S3, Google Cloud Storage, or Microsoft Azure). - External location (Amazon S3, Google Cloud Storage, or Microsoft Azure).]]></description>
            <parameters>
                <parameter name="destinationTable">
                    <description><![CDATA[Specifies the name of the table into which data is loaded.]]></description>
                </parameter>
                <parameter name="columnNames">
                    <description><![CDATA[Specifies an explicit list of table columns (separated by commas) into which you want to insert data.]]></description>
                </parameter>
                <parameter name="transformationSelectSql">
                    <description><![CDATA[Specifies an explicit set of fields/columns (separated by commas) to load from the staged data files.]]></description>
                </parameter>
                <parameter name="stageName">
                    <description><![CDATA[Specifies the internal or external location where the files containing data to be loaded are staged.]]></description>
                </parameter>
                <parameter name="stageAlias">
                    <description><![CDATA[Specifies an optional alias for the FROM value (e.g. d in COPY INTO t1 (c1) FROM (SELECT d.$1 FROM @mystage/file1.csv.gz d));).]]></description>
                </parameter>
                <parameter name="files">
                    <description><![CDATA[Specifies a list of one or more files to load from a staged internal or external location.]]></description>
                </parameter>
                <parameter name="matchingPattern">
                    <description><![CDATA[Specifies the file names or paths to match based on a regular expression pattern.]]></description>
                </parameter>
                <parameter name="fileFormatForCopyIntoTable">
                    <description><![CDATA[Specifies the format of the data files to load.]]></description>
                </parameter>
                <parameter name="config-ref">
                    <description><![CDATA[The name of the configuration to be used to execute this component]]></description>
                </parameter>
                <parameter name="transactionalAction">
                    <description><![CDATA[The type of joining action that operations can take regarding transactions.]]></description>
                </parameter>
                <parameter name="onError">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="sizeLimit">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="purge">
                    <description><![CDATA[Specifies whether to remove the data files from the stage automatically after the data is loaded successfully.]]></description>
                </parameter>
                <parameter name="returnFailedOnly">
                    <description><![CDATA[Specifies whether to return only files that have failed to load in the statement result.]]></description>
                </parameter>
                <parameter name="matchByColumnName">
                    <description><![CDATA[Specifies whether to load data into columns in the target table that match corresponding columns represented in the data.]]></description>
                </parameter>
                <parameter name="enforceLength">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="truncateColumns">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="force">
                    <description><![CDATA[Specifies to load all files, regardless of whether they've been loaded previously and have not changed since they were loaded.]]></description>
                </parameter>
                <parameter name="loadUncertainFiles">
                    <description><![CDATA[Specifies to load files for which the load status is unknown.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="createPipe">
            <description><![CDATA[Creates a new pipe in the system for defining the COPY INTO statement used by Snowpipe to load data from an ingestion queue into tables.]]></description>
            <parameters>
                <parameter name="pipeName">
                    <description><![CDATA[Specifies the identifier for the pipe; must be unique for the schema in which the pipe is created.]]></description>
                </parameter>
                <parameter name="copyStatement">
                    <description><![CDATA[Specifies the statement used to load data from queued files into a Snowflake table. This statement serves as the text/definition for the pipe and is displayed in the SHOW PIPES output.]]></description>
                </parameter>
                <parameter name="replaceExistingPipe">
                    <description><![CDATA[Specifies if an already existing pipe should be overwritten by the one being created.]]></description>
                </parameter>
                <parameter name="ifNotExists">
                    <description><![CDATA[Specifies if the pipe should be created if there isn't already an existing pipe with the same name.]]></description>
                </parameter>
                <parameter name="autoIngest">
                    <description><![CDATA[Specifies whether data should be automatically loaded from the specified external stage and optional path when event notifications are received from a configured message service.]]></description>
                </parameter>
                <parameter name="comment">
                    <description><![CDATA[Specifies a comment for the pipe.]]></description>
                </parameter>
                <parameter name="config-ref">
                    <description><![CDATA[The name of the configuration to be used to execute this component]]></description>
                </parameter>
                <parameter name="transactionalAction">
                    <description><![CDATA[The type of joining action that operations can take regarding transactions.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="createStage">
            <description><![CDATA[Creates a new named stage to use for loading data from files into Snowflake tables and unloading data from tables into files.]]></description>
            <parameters>
                <parameter name="stageLocation">
                    <description><![CDATA[Snowflake internal or external place to create the stage.]]></description>
                </parameter>
                <parameter name="ifNotExists">
                    <description><![CDATA[Specifies if the stage should not be created if there is already an existing stage with the same name.]]></description>
                </parameter>
                <parameter name="replaceAlreadyExistingStage">
                    <description><![CDATA[Specifies if an already existing stage should be overridden by the one being created.]]></description>
                </parameter>
                <parameter name="isTemporary">
                    <description><![CDATA[Specifies if the stage being created is temporary or not.]]></description>
                </parameter>
                <parameter name="fileFormat">
                    <description><![CDATA[Specifies the type of files for the stage.]]></description>
                </parameter>
                <parameter name="comment">
                    <description><![CDATA[Specifies a comment for the stage.]]></description>
                </parameter>
                <parameter name="config-ref">
                    <description><![CDATA[The name of the configuration to be used to execute this component]]></description>
                </parameter>
                <parameter name="transactionalAction">
                    <description><![CDATA[The type of joining action that operations can take regarding transactions.]]></description>
                </parameter>
                <parameter name="onError">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="sizeLimit">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="purge">
                    <description><![CDATA[Specifies whether to remove the data files from the stage automatically after the data is loaded successfully.]]></description>
                </parameter>
                <parameter name="returnFailedOnly">
                    <description><![CDATA[Specifies whether to return only files that have failed to load in the statement result.]]></description>
                </parameter>
                <parameter name="matchByColumnName">
                    <description><![CDATA[Specifies whether to load data into columns in the target table that match corresponding columns represented in the data.]]></description>
                </parameter>
                <parameter name="enforceLength">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="truncateColumns">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="forceLoad">
                    <description><![CDATA[Specifies to load all files, regardless of whether they've been loaded previously and have not changed since they were loaded.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="createTask">
            <description><![CDATA[Creates a new named external stage to use for loading data from files into Snowflake tables and unloading data from tables into files.]]></description>
            <parameters>
                <parameter name="taskName">
                    <description><![CDATA[Specifies the name of the task; must be unique for the schema in which the task is created.]]></description>
                </parameter>
                <parameter name="warehouseName">
                    <description><![CDATA[Specifies the name of the warehouse.]]></description>
                </parameter>
                <parameter name="sql">
                    <description><![CDATA[Specifies the query to run.]]></description>
                </parameter>
                <parameter name="replaceExistingTask">
                    <description><![CDATA[Specifies if an existing task should be overwritten by the one being created.]]></description>
                </parameter>
                <parameter name="ifNotExists">
                    <description><![CDATA[Specifies if the task should be created if there isn't already an existing task with the same name.]]></description>
                </parameter>
                <parameter name="sessionParameters">
                    <description><![CDATA[Specifies the session parameters to set for the session when the task runs.]]></description>
                </parameter>
                <parameter name="runTimeout">
                    <description><![CDATA[Specifies a time limit in milliseconds on a single task run before it times out.]]></description>
                </parameter>
                <parameter name="copyGrants">
                    <description><![CDATA[Specifies whether access permissions from the original task should be retained when cloning or replacing an existing task.]]></description>
                </parameter>
                <parameter name="comment">
                    <description><![CDATA[Specifies a comment for the task.]]></description>
                </parameter>
                <parameter name="afterTask">
                    <description><![CDATA[Specifies the name of a predecessor task which would trigger the created task whenever the predecessor task is run.]]></description>
                </parameter>
                <parameter name="when">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="config-ref">
                    <description><![CDATA[The name of the configuration to be used to execute this component]]></description>
                </parameter>
                <parameter name="transactionalAction">
                    <description><![CDATA[The type of joining action that operations can take regarding transactions.]]></description>
                </parameter>
                <parameter name="scheduleOptionCronExpression">
                    <description><![CDATA[Specifies a cron expression and time zone for periodically running the task. Supports a subset of standard cron utility syntax.]]></description>
                </parameter>
                <parameter name="scheduleOptionTimeInterval">
                    <description><![CDATA[Specifies an interval (in minutes) of wait time inserted between runs of the task. Accepts positive integers only.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="delete">
            <description><![CDATA[Removes data from a table using an optional WHERE clause and/or additional tables.]]></description>
            <parameters>
                <parameter name="config-ref">
                    <description><![CDATA[The name of the configuration to be used to execute this component]]></description>
                </parameter>
                <parameter name="transactionalAction">
                    <description><![CDATA[The type of joining action that operations can take regarding transactions.]]></description>
                </parameter>
                <parameter name="queryTimeout">
                    <description><![CDATA[Indicates the minimum amount of time before the JDBC driver attempts to cancel a running statement. No timeout is used by default.]]></description>
                </parameter>
                <parameter name="queryTimeoutUnit">
                    <description><![CDATA[A TimeUnit which qualifies the #queryTimeout]]></description>
                </parameter>
                <parameter name="fetchSize">
                    <description><![CDATA[Indicates how many rows to fetch from the database when rows are read from a resultSet. This property is required when streaming is true; in that case a default value (10) is used.]]></description>
                </parameter>
                <parameter name="maxRows">
                    <description><![CDATA[Sets the limit for the maximum number of rows that any ResultSet object generated by this message processor can contain for the given number. If the limit is exceeded, the excess rows are silently dropped.]]></description>
                </parameter>
                <parameter name="sql">
                    <description><![CDATA[The text of the SQL query to be executed]]></description>
                </parameter>
                <parameter name="parameterTypes">
                    <description><![CDATA[Allows to optionally specify the type of one or more of the parameters in the query. If provided, you're not even required to reference all of the parameters, but you cannot reference a parameter not present in the input values]]></description>
                </parameter>
                <parameter name="inputParameters">
                    <description><![CDATA[A Map which keys are the name of an input parameter to be set on the JDBC prepared statement. Each parameter should be referenced in the sql text using a colon prefix (E.g: where id = :myParamName)). The map's values will contain the actual assignation for each parameter.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="executeDdl">
            <description><![CDATA[Data Definition Language (DDL) commands are used to create, manipulate, and modify objects in Snowflake, such as users, virtual warehouses, databases, schemas, tables, views, columns, functions, and stored procedures.]]></description>
            <parameters>
                <parameter name="sql">
                    <description><![CDATA[SQL DDL statement to execute.]]></description>
                </parameter>
                <parameter name="config-ref">
                    <description><![CDATA[The name of the configuration to be used to execute this component]]></description>
                </parameter>
                <parameter name="transactionalAction">
                    <description><![CDATA[The type of joining action that operations can take regarding transactions.]]></description>
                </parameter>
                <parameter name="queryTimeout">
                    <description><![CDATA[Indicates the minimum amount of time before the JDBC driver attempts to cancel a running statement. No timeout is used by default.]]></description>
                </parameter>
                <parameter name="queryTimeoutUnit">
                    <description><![CDATA[A TimeUnit which qualifies the #queryTimeout]]></description>
                </parameter>
                <parameter name="fetchSize">
                    <description><![CDATA[Indicates how many rows to fetch from the database when rows are read from a resultSet. This property is required when streaming is true; in that case a default value (10) is used.]]></description>
                </parameter>
                <parameter name="maxRows">
                    <description><![CDATA[Sets the limit for the maximum number of rows that any ResultSet object generated by this message processor can contain for the given number. If the limit is exceeded, the excess rows are silently dropped.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="executeScript">
            <description><![CDATA[Executes a SQL script in one single Database statement. The script is executed as provided by the user, without any parameter binding.]]></description>
            <parameters>
                <parameter name="config-ref">
                    <description><![CDATA[The name of the configuration to be used to execute this component]]></description>
                </parameter>
                <parameter name="transactionalAction">
                    <description><![CDATA[The type of joining action that operations can take regarding transactions.]]></description>
                </parameter>
                <parameter name="sql">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="file">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="queryTimeout">
                    <description><![CDATA[Indicates the minimum amount of time before the JDBC driver attempts to cancel a running statement. No timeout is used by default.]]></description>
                </parameter>
                <parameter name="queryTimeoutUnit">
                    <description><![CDATA[A TimeUnit which qualifies the #queryTimeout]]></description>
                </parameter>
                <parameter name="fetchSize">
                    <description><![CDATA[Indicates how many rows to fetch from the database when rows are read from a resultSet. This property is required when streaming is true; in that case a default value (10) is used.]]></description>
                </parameter>
                <parameter name="maxRows">
                    <description><![CDATA[Sets the limit for the maximum number of rows that any ResultSet object generated by this message processor can contain for the given number. If the limit is exceeded, the excess rows are silently dropped.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="insert">
            <description><![CDATA[Updates a table by inserting one or more rows into the table. The values inserted into each column in the table can be explicitly-specified or the results of a query.]]></description>
            <parameters>
                <parameter name="config-ref">
                    <description><![CDATA[The name of the configuration to be used to execute this component]]></description>
                </parameter>
                <parameter name="transactionalAction">
                    <description><![CDATA[The type of joining action that operations can take regarding transactions.]]></description>
                </parameter>
                <parameter name="queryTimeout">
                    <description><![CDATA[Indicates the minimum amount of time before the JDBC driver attempts to cancel a running statement. No timeout is used by default.]]></description>
                </parameter>
                <parameter name="queryTimeoutUnit">
                    <description><![CDATA[A TimeUnit which qualifies the #queryTimeout]]></description>
                </parameter>
                <parameter name="fetchSize">
                    <description><![CDATA[Indicates how many rows to fetch from the database when rows are read from a resultSet. This property is required when streaming is true; in that case a default value (10) is used.]]></description>
                </parameter>
                <parameter name="maxRows">
                    <description><![CDATA[Sets the limit for the maximum number of rows that any ResultSet object generated by this message processor can contain for the given number. If the limit is exceeded, the excess rows are silently dropped.]]></description>
                </parameter>
                <parameter name="sql">
                    <description><![CDATA[The text of the SQL query to be executed]]></description>
                </parameter>
                <parameter name="parameterTypes">
                    <description><![CDATA[Allows to optionally specify the type of one or more of the parameters in the query. If provided, you're not even required to reference all of the parameters, but you cannot reference a parameter not present in the input values]]></description>
                </parameter>
                <parameter name="inputParameters">
                    <description><![CDATA[A Map which keys are the name of an input parameter to be set on the JDBC prepared statement. Each parameter should be referenced in the sql text using a colon prefix (E.g: where id = :myParamName)). The map's values will contain the actual assignation for each parameter.]]></description>
                </parameter>
                <parameter name="autoGenerateKeys">
                    <description><![CDATA[Indicates when to make auto-generated keys available for retrieval.]]></description>
                </parameter>
                <parameter name="autoGeneratedKeysColumnIndexes">
                    <description><![CDATA[List of column indexes that indicates which auto-generated keys to make available for retrieval.]]></description>
                </parameter>
                <parameter name="autoGeneratedKeysColumnNames">
                    <description><![CDATA[List of column names that indicates which auto-generated keys should be made available for retrieval.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="insertMultiTable">
            <description><![CDATA[Updates multiple tables by inserting one or more rows with column values (from a query) into the tables. Supports both unconditional and conditional inserts.]]></description>
            <parameters>
                <parameter name="insertIntoMultiTableParameters">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="config-ref">
                    <description><![CDATA[The name of the configuration to be used to execute this component]]></description>
                </parameter>
                <parameter name="transactionalAction">
                    <description><![CDATA[The type of joining action that operations can take regarding transactions.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="merge">
            <description><![CDATA[Inserts, updates, and deletes values in a table based on values in a second table or a sub-query.]]></description>
            <parameters>
                <parameter name="targetTable">
                    <description><![CDATA[Specifies the table to merge.]]></description>
                </parameter>
                <parameter name="source">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="joinExpr">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="matchClauses">
                    <description><![CDATA[Specifies a list of clauses and actions to perform when a match occurs or not.]]></description>
                </parameter>
                <parameter name="config-ref">
                    <description><![CDATA[The name of the configuration to be used to execute this component]]></description>
                </parameter>
                <parameter name="transactionalAction">
                    <description><![CDATA[The type of joining action that operations can take regarding transactions.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="select">
            <description><![CDATA[SELECT can be used in both a statement and a clause within a SELECT statement: As a statement, the SELECT statement is the most commonly executed SQL statement; it queries the database and retrieves a set of rows. As a clause, SELECT defines the set of columns returned by a query.]]></description>
            <parameters>
                <parameter name="config-ref">
                    <description><![CDATA[The name of the configuration to be used to execute this component]]></description>
                </parameter>
                <parameter name="transactionalAction">
                    <description><![CDATA[The type of joining action that operations can take regarding transactions.]]></description>
                </parameter>
                <parameter name="streamingStrategy">
                    <description><![CDATA[Configure if repeatable streams should be used and their behaviour]]></description>
                </parameter>
                <parameter name="queryTimeout">
                    <description><![CDATA[Indicates the minimum amount of time before the JDBC driver attempts to cancel a running statement. No timeout is used by default.]]></description>
                </parameter>
                <parameter name="queryTimeoutUnit">
                    <description><![CDATA[A TimeUnit which qualifies the #queryTimeout]]></description>
                </parameter>
                <parameter name="fetchSize">
                    <description><![CDATA[Indicates how many rows to fetch from the database when rows are read from a resultSet. This property is required when streaming is true; in that case a default value (10) is used.]]></description>
                </parameter>
                <parameter name="maxRows">
                    <description><![CDATA[Sets the limit for the maximum number of rows that any ResultSet object generated by this message processor can contain for the given number. If the limit is exceeded, the excess rows are silently dropped.]]></description>
                </parameter>
                <parameter name="sql">
                    <description><![CDATA[The text of the SQL query to be executed]]></description>
                </parameter>
                <parameter name="parameterTypes">
                    <description><![CDATA[Allows to optionally specify the type of one or more of the parameters in the query. If provided, you're not even required to reference all of the parameters, but you cannot reference a parameter not present in the input values]]></description>
                </parameter>
                <parameter name="inputParameters">
                    <description><![CDATA[A Map which keys are the name of an input parameter to be set on the JDBC prepared statement. Each parameter should be referenced in the sql text using a colon prefix (E.g: where id = :myParamName)). The map's values will contain the actual assignation for each parameter.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="storedProcedure">
            <description><![CDATA[Invokes a Stored Procedure on the database. When the stored procedure returns one or more ResultSet instances, streaming is automatically applied to avoid preemptive consumption of such results, which may lead to performance and memory issues.]]></description>
            <parameters>
                <parameter name="config-ref">
                    <description><![CDATA[The name of the configuration to be used to execute this component]]></description>
                </parameter>
                <parameter name="transactionalAction">
                    <description><![CDATA[The type of joining action that operations can take regarding transactions.]]></description>
                </parameter>
                <parameter name="streamingStrategy">
                    <description><![CDATA[Configure if repeatable streams should be used and their behaviour]]></description>
                </parameter>
                <parameter name="queryTimeout">
                    <description><![CDATA[Indicates the minimum amount of time before the JDBC driver attempts to cancel a running statement. No timeout is used by default.]]></description>
                </parameter>
                <parameter name="queryTimeoutUnit">
                    <description><![CDATA[A TimeUnit which qualifies the #queryTimeout]]></description>
                </parameter>
                <parameter name="fetchSize">
                    <description><![CDATA[Indicates how many rows to fetch from the database when rows are read from a resultSet. This property is required when streaming is true; in that case a default value (10) is used.]]></description>
                </parameter>
                <parameter name="maxRows">
                    <description><![CDATA[Sets the limit for the maximum number of rows that any ResultSet object generated by this message processor can contain for the given number. If the limit is exceeded, the excess rows are silently dropped.]]></description>
                </parameter>
                <parameter name="sql">
                    <description><![CDATA[The text of the SQL query to be executed]]></description>
                </parameter>
                <parameter name="parameterTypes">
                    <description><![CDATA[Allows to optionally specify the type of one or more of the parameters in the query. If provided, you're not even required to reference all of the parameters, but you cannot reference a parameter not present in the input values]]></description>
                </parameter>
                <parameter name="inputParameters">
                    <description><![CDATA[A Map which keys are the name of an input parameter to be set on the JDBC prepared statement. Each parameter should be referenced in the sql text using a colon prefix (E.g: where id = :myParamName)). The map's values will contain the actual assignation for each parameter.]]></description>
                </parameter>
                <parameter name="autoGenerateKeys">
                    <description><![CDATA[Indicates when to make auto-generated keys available for retrieval.]]></description>
                </parameter>
                <parameter name="autoGeneratedKeysColumnIndexes">
                    <description><![CDATA[List of column indexes that indicates which auto-generated keys to make available for retrieval.]]></description>
                </parameter>
                <parameter name="autoGeneratedKeysColumnNames">
                    <description><![CDATA[List of column names that indicates which auto-generated keys should be made available for retrieval.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
        <operation name="update">
            <description><![CDATA[Updates specified rows in the target table with new values.]]></description>
            <parameters>
                <parameter name="config-ref">
                    <description><![CDATA[The name of the configuration to be used to execute this component]]></description>
                </parameter>
                <parameter name="transactionalAction">
                    <description><![CDATA[The type of joining action that operations can take regarding transactions.]]></description>
                </parameter>
                <parameter name="queryTimeout">
                    <description><![CDATA[Indicates the minimum amount of time before the JDBC driver attempts to cancel a running statement. No timeout is used by default.]]></description>
                </parameter>
                <parameter name="queryTimeoutUnit">
                    <description><![CDATA[A TimeUnit which qualifies the #queryTimeout]]></description>
                </parameter>
                <parameter name="fetchSize">
                    <description><![CDATA[Indicates how many rows to fetch from the database when rows are read from a resultSet. This property is required when streaming is true; in that case a default value (10) is used.]]></description>
                </parameter>
                <parameter name="maxRows">
                    <description><![CDATA[Sets the limit for the maximum number of rows that any ResultSet object generated by this message processor can contain for the given number. If the limit is exceeded, the excess rows are silently dropped.]]></description>
                </parameter>
                <parameter name="sql">
                    <description><![CDATA[The text of the SQL query to be executed]]></description>
                </parameter>
                <parameter name="parameterTypes">
                    <description><![CDATA[Allows to optionally specify the type of one or more of the parameters in the query. If provided, you're not even required to reference all of the parameters, but you cannot reference a parameter not present in the input values]]></description>
                </parameter>
                <parameter name="inputParameters">
                    <description><![CDATA[A Map which keys are the name of an input parameter to be set on the JDBC prepared statement. Each parameter should be referenced in the sql text using a colon prefix (E.g: where id = :myParamName)). The map's values will contain the actual assignation for each parameter.]]></description>
                </parameter>
                <parameter name="autoGenerateKeys">
                    <description><![CDATA[Indicates when to make auto-generated keys available for retrieval.]]></description>
                </parameter>
                <parameter name="autoGeneratedKeysColumnIndexes">
                    <description><![CDATA[List of column indexes that indicates which auto-generated keys to make available for retrieval.]]></description>
                </parameter>
                <parameter name="autoGeneratedKeysColumnNames">
                    <description><![CDATA[List of column names that indicates which auto-generated keys should be made available for retrieval.]]></description>
                </parameter>
                <parameter name="target">
                    <description><![CDATA[The name of a variable on which the operation's output will be placed]]></description>
                </parameter>
                <parameter name="targetValue">
                    <description><![CDATA[An expression that will be evaluated against the operation's output and the outcome of that expression will be stored in the target variable]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </operation>
    </operations>
    <sources>
        <source name="row-listener">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="config-ref">
                    <description><![CDATA[The name of the configuration to be used to execute this component]]></description>
                </parameter>
                <parameter name="transactionalAction">
                    <description><![CDATA[The type of beginning action that sources can take regarding transactions.]]></description>
                </parameter>
                <parameter name="transactionType">
                    <description><![CDATA[The type of transaction to create. Availability will depend on the runtime version.]]></description>
                </parameter>
                <parameter name="primaryNodeOnly">
                    <description><![CDATA[Whether this source should only be executed on the primary node when runnning in Cluster]]></description>
                </parameter>
                <parameter name="schedulingStrategy">
                    <description><![CDATA[Configures the scheduler that triggers the polling]]></description>
                </parameter>
                <parameter name="redeliveryPolicy">
                    <description><![CDATA[Defines a policy for processing the redelivery of the same message]]></description>
                </parameter>
                <parameter name="table">
                    <description><![CDATA[The name of the table to select from]]></description>
                </parameter>
                <parameter name="watermarkColumn">
                    <description><![CDATA[The name of the column to use for watermark. Values taken from this column will be used to filter the contents of the next poll, so that only rows with a greater watermark value are processed.]]></description>
                </parameter>
                <parameter name="idColumn">
                    <description><![CDATA[The name of the column to consider as row ID. If provided, this component will make sure that the same row is not processed twice by concurrent polls.]]></description>
                </parameter>
                <parameter name="since">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="queryTimeout">
                    <description><![CDATA[Indicates the minimum amount of time before the JDBC driver attempts to cancel a running statement. No timeout is used by default.]]></description>
                </parameter>
                <parameter name="queryTimeoutUnit">
                    <description><![CDATA[A TimeUnit which qualifies the #queryTimeout]]></description>
                </parameter>
                <parameter name="fetchSize">
                    <description><![CDATA[Indicates how many rows to fetch from the database when rows are read from a resultSet. This property is required when streaming is true; in that case a default value (10) is used.]]></description>
                </parameter>
                <parameter name="maxRows">
                    <description><![CDATA[Sets the limit for the maximum number of rows that any ResultSet object generated by this message processor can contain for the given number. If the limit is exceeded, the excess rows are silently dropped.]]></description>
                </parameter>
                <parameter name="reconnectionStrategy">
                    <description><![CDATA[A retry strategy in case of connectivity errors]]></description>
                </parameter>
            </parameters>
        </source>
    </sources>
    <types>
        <type name="com.mulesoft.connector.snowflake.api.config.SnowflakeDbPoolingProfile">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="maxPoolSize">
                    <description><![CDATA[Maximum number of connections a pool maintains at any given time]]></description>
                </parameter>
                <parameter name="minPoolSize">
                    <description><![CDATA[Minimum number of connections a pool maintains at any given time]]></description>
                </parameter>
                <parameter name="acquireIncrement">
                    <description><![CDATA[Determines how many connections at a time to try to acquire when the pool is exhausted]]></description>
                </parameter>
                <parameter name="preparedStatementCacheSize">
                    <description><![CDATA[Determines how many statements are cached per pooled connection. Setting this to zero will disable statement caching]]></description>
                </parameter>
                <parameter name="maxWait">
                    <description><![CDATA[The amount of time a client trying to obtain a connection waits for it to be acquired when the pool is
 exhausted. Zero (default) means wait indefinitely]]></description>
                </parameter>
                <parameter name="maxWaitUnit">
                    <description><![CDATA[A #maxWait.]]></description>
                </parameter>
                <parameter name="maxIdleTime">
                    <description><![CDATA[Determines how many seconds a Connection can remain pooled but unused before being discarded.
 Zero means idle connections never expire.
 DefaultValue is 10800 seconds (three hours) to fit Snowflake session time.]]></description>
                </parameter>
                <parameter name="additionalProperties">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.AmazonS3KeyCredentials">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="awsKeyId">
                    <description><![CDATA[AWS Key Id.]]></description>
                </parameter>
                <parameter name="awsKeySecret">
                    <description><![CDATA[AWS Key Secret.]]></description>
                </parameter>
                <parameter name="awsToken">
                    <description><![CDATA[AWS Token.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.AmazonS3NoCredentials">
            <description><![CDATA[]]></description>
            <parameters/>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.AmazonS3RoleCredentials">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="awsRole">
                    <description><![CDATA[AWS Role.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.AutoIngest">
            <description><![CDATA[]]></description>
            <parameters/>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.DoNotUseAutoIngest">
            <description><![CDATA[]]></description>
            <parameters/>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.ExternalLocation">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="externalLocationProvider">
                    <description><![CDATA[External system to integrate with Snowflake]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.ExternalLocationProvider">
            <description><![CDATA[]]></description>
            <parameters/>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.ExternalStageLocation">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="stageName">
                    <description><![CDATA[External stage name.]]></description>
                </parameter>
                <parameter name="externalLocationProvider">
                    <description><![CDATA[External system to integrate with Snowflake]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.FileFormat">
            <description><![CDATA[]]></description>
            <parameters/>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.FileFormatDefinitionByName">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="fileFormatName">
                    <description><![CDATA[Specifies an existing named file format to use for loading/unloading data into/from the table.
 The named file format determines the format type (CSV, JSON, PARQUET), as well as any other format options, for the data files.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.FileFormatDefinitionByTypeOptions">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="formatTypeOptions">
                    <description><![CDATA[Specifies the type of files loaded/unloaded into/from the table.
 If a format type is specified, additional format-specific options can be specified.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.FileFormatOptions">
            <description><![CDATA[]]></description>
            <parameters/>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.FileFormatOptionsAvro">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="compression">
                    <description><![CDATA[Specifies a compression algorithm to use for compressing the unloaded data files.]]></description>
                </parameter>
                <parameter name="trimSpace">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="nullIfs">
                    <description><![CDATA[Specifies a list of values from which Snowflake selects the first one to convert to from SQL NULL.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.FileFormatOptionsCsv">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="compression">
                    <description><![CDATA[Specifies a compression algorithm to use for compressing the unloaded data files.]]></description>
                </parameter>
                <parameter name="recordDelimiter">
                    <description><![CDATA[One or more single-byte or multibyte characters that separate records in an input file or unloaded file.]]></description>
                </parameter>
                <parameter name="fieldDelimiter">
                    <description><![CDATA[One or more single-byte or multibyte characters that separate records in an input file or unloaded file.]]></description>
                </parameter>
                <parameter name="fileExtension">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="skipHeaderCount">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="skipBlankLines">
                    <description><![CDATA[Specifies whether to skip any blank lines encountered in data, instead of resulting in an end-of-record error.]]></description>
                </parameter>
                <parameter name="dateFormat">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="timeFormat">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="timestampFormat">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="binaryFormat">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="escapeCharacter">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="escapeUnenclosedFieldCharacter">
                    <description><![CDATA[Specifies a single character used as the escape character for unenclosed field values only.]]></description>
                </parameter>
                <parameter name="trimSpace">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="fieldOptionallyEnclosedBy">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="nullIfs">
                    <description><![CDATA[Specifies a list of values from which Snowflake selects the first one to convert to from SQL NULL.]]></description>
                </parameter>
                <parameter name="errorOnColumnCountMismatch">
                    <description><![CDATA[Specifies whether to generate a parsing error if the number of delimited columns (i.e. fields) in an input file does not match the number of columns in the corresponding table.]]></description>
                </parameter>
                <parameter name="replaceInvalidCharacters">
                    <description><![CDATA[Specifies whether to replace invalid UTF-8 characters with a default Unicode character instead of resulting in an error.]]></description>
                </parameter>
                <parameter name="validateUTF8">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="emptyFieldAsNull">
                    <description><![CDATA[Used in combination with emptyFieldAsNull when set as false allows empty strings to be loaded in tables without enclosing the field values in quotes.]]></description>
                </parameter>
                <parameter name="skipByteOrderMark">
                    <description><![CDATA[Specifies whether to skip any byte order mark information from input files so that they wouldn't cause errors or be merged into the first table column.]]></description>
                </parameter>
                <parameter name="encoding">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.FileFormatOptionsJson">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="compression">
                    <description><![CDATA[Specifies a compression algorithm to use for compressing the unloaded data files.]]></description>
                </parameter>
                <parameter name="dateFormat">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="timeFormat">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="timestampFormat">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="binaryFormat">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="trimSpace">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="nullIfs">
                    <description><![CDATA[Specifies a list of values from which Snowflake selects the first one to convert to from SQL NULL.]]></description>
                </parameter>
                <parameter name="fileExtension">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="enableOctal">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="allowDuplicate">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="stripOuterArray">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="stripNullValues">
                    <description><![CDATA[Specifies that the JSON parser should remove object fields or array elements containing null values.]]></description>
                </parameter>
                <parameter name="replaceInvalidCharacters">
                    <description><![CDATA[Specifies whether to replace invalid UTF-8 characters with a default Unicode character instead of resulting in an error.]]></description>
                </parameter>
                <parameter name="ignoreUTF8Errors">
                    <description><![CDATA[Specifies whether to suppress UTF-8 encoding errors and silently replace with a default Unicode character.]]></description>
                </parameter>
                <parameter name="skipByteOrderMark">
                    <description><![CDATA[Specifies whether to skip any byte order mark information from input files so that they wouldn't cause errors or be merged into the first table column.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.FileFormatOptionsOrc">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="trimSpace">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="nullIfs">
                    <description><![CDATA[Specifies a list of values from which Snowflake selects the first one to convert to from SQL NULL.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.FileFormatOptionsParquet">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="compression">
                    <description><![CDATA[Specifies a compression algorithm to use for compressing the unloaded data files.]]></description>
                </parameter>
                <parameter name="binaryAsText">
                    <description><![CDATA[Specifies whether to interpret columns with no defined logical data type as UTF-8 text when set to True, or binary data when set to False.]]></description>
                </parameter>
                <parameter name="trimSpace">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="nullIfs">
                    <description><![CDATA[Specifies a list of values from which Snowflake selects the first one to convert to from SQL NULL.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.FileFormatOptionsXml">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="compression">
                    <description><![CDATA[Specifies a compression algorithm to use for compressing the unloaded data files.]]></description>
                </parameter>
                <parameter name="ignoreUTF8Errors">
                    <description><![CDATA[Specifies whether to suppress UTF-8 encoding errors and silently replace with a default Unicode character.]]></description>
                </parameter>
                <parameter name="preserveSpace">
                    <description><![CDATA[Specifies whether the XML parser preserves leading and trailing spaces in element content.]]></description>
                </parameter>
                <parameter name="stripOuterElement">
                    <description><![CDATA[Specifies whether the XML parser strips out the outer XML element, exposing 2nd level elements as separate documents.]]></description>
                </parameter>
                <parameter name="disableSnowflakeData">
                    <description><![CDATA[Specifies whether the XML parser disables recognition of Snowflake semi-structured data tags.]]></description>
                </parameter>
                <parameter name="disableAutoConvert">
                    <description><![CDATA[Specifies whether the XML parser disables automatic conversion of numeric and Boolean values from text to native representation.]]></description>
                </parameter>
                <parameter name="skipByteOrderMark">
                    <description><![CDATA[Specifies whether to skip any byte order mark information from input files so that they wouldn't cause errors or be merged into the first table column.]]></description>
                </parameter>
                <parameter name="nullIfs">
                    <description><![CDATA[Specifies a list of values from which Snowflake selects the first one to convert to from SQL NULL.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.GoogleCloudStorageExternalLocation">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="url">
                    <description><![CDATA[URL for the Google Cloud Storage.]]></description>
                </parameter>
                <parameter name="storageIntegrationName">
                    <description><![CDATA[Name of the storage integration used to delegate authentication responsibility for external cloud storage.]]></description>
                </parameter>
                <parameter name="encryption">
                    <description><![CDATA[Required only for loading from/unloading into encrypted files; not required if storage location and files are unencrypted.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.InsertIntoMultiTableConditional">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="overwrite">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="subquery">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="executionMode">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="conditions">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="elseIntoClause">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.InsertIntoMultiTableParameters">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="overwrite">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="subquery">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.InsertIntoMultiTableUnconditional">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="overwrite">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="subquery">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="intoClauses">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.InternalStageLocation">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="stageName">
                    <description><![CDATA[Internal stage name.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.Location">
            <description><![CDATA[]]></description>
            <parameters/>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.MergeIntoMatchClause">
            <description><![CDATA[@author MuleSoft, Inc.]]></description>
            <parameters>
                <parameter name="casePredicate">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.MergeIntoMatchedDeleteClause">
            <description><![CDATA[@author MuleSoft, Inc.]]></description>
            <parameters>
                <parameter name="casePredicate">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.MergeIntoMatchedUpdateClause">
            <description><![CDATA[@author MuleSoft, Inc.]]></description>
            <parameters>
                <parameter name="casePredicate">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="updateExpression">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.MergeIntoNotMatchedInsertClause">
            <description><![CDATA[@author MuleSoft, Inc.]]></description>
            <parameters>
                <parameter name="casePredicate">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="columnNames">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="columnValues">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.MicrosoftAzureExternalLocation">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="url">
                    <description><![CDATA[URL for the Microsoft Azure.]]></description>
                </parameter>
                <parameter name="microsoftAzureStorageIntegrationCredentials">
                    <description><![CDATA["The security credentials for connecting to Microsoft Azure.]]></description>
                </parameter>
                <parameter name="encryption">
                    <description><![CDATA[Required only for loading from/unloading into encrypted files; not required if storage location and files are unencrypted.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.MicrosoftAzureKeyCredentials">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="azureSasToken">
                    <description><![CDATA[Specifies the SAS (shared access signature) token for connecting to Azure and accessing the private container where the files containing data are staged. Credentials are generated by Azure.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.MicrosoftAzureNoCredentials">
            <description><![CDATA[]]></description>
            <parameters/>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.QuerySource">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="sql">
                    <description><![CDATA[SELECT statement that returns data to be unloaded into files. You can limit the number of rows returned by specifying a LIMIT / FETCH clause in the query.]]></description>
                </parameter>
                <parameter name="validationMode">
                    <description><![CDATA[Execute COPY in validation mode to return the result of a query and view the data that will be unloaded from the orderstiny table if COPY is executed in normal mode:
 copy into @my_stage
 from (select * from orderstiny limit 5)
 validation_mode='RETURN_ROWS';]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.ScheduleOptionCronExpression">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="cronExpression">
                    <description><![CDATA[Specifies a cron expression which identifies when to repeat runs of the task.]]></description>
                </parameter>
                <parameter name="timeZone">
                    <description><![CDATA[Specifies the time zone to use for the cron expression.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.ScheduleOptionTimeInterval">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="timeIntervalInMinutes">
                    <description><![CDATA[Specifies a time interval in minutes to wait between periodic runs of the task.
 Also supports num M syntax.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.SnowflakeLocation">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="stageName">
                    <description><![CDATA[Files are unloaded to the specified Snowflake location (internal/external stage, table, path):
   - [namespace.]int_stage_name[/path] = Files are unloaded to the specified named internal stage.
   - [namespace.]ext_stage_name[/path] = Files are unloaded to the specified named external stage.
   - [namespace.]%table_name[/path] = Files are unloaded to the stage for the specified table.
   - ~[/path] = Files are unloaded to the stage for the current user.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.SnowflakeParameterType">
            <description><![CDATA[Allows specifying the type of a given parameter

 @since 1.0]]></description>
            <parameters>
                <parameter name="key">
                    <description><![CDATA[The name of the input parameter.]]></description>
                </parameter>
                <parameter name="typeClassifier">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.SnowflakeStatementResult">
            <description><![CDATA[Information about the execution of a DML statement]]></description>
            <parameters>
                <parameter name="affectedRows">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="generatedKeys">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.StageLocation">
            <description><![CDATA[]]></description>
            <parameters/>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.TableQuerySource">
            <description><![CDATA[]]></description>
            <parameters/>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.TableSource">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="tableName">
                    <description><![CDATA[Specifies the name of the table from which data is unloaded.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.UseAutoIngest">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="snsTopic">
                    <description><![CDATA[Required only when configuring AUTO_INGEST for Amazon S3 stages using Amazon Simple Notification Service (SNS).
 Specifies the Amazon Resource Name (ARN) for the SNS topic for your S3 bucket.
 The CREATE PIPE statement subscribes the Amazon Simple Queue Service (SQS) queue to the specified SNS topic.
 The pipe copies files to the ingest queue triggered by event notifications via the SNS topic.]]></description>
                </parameter>
                <parameter name="integration">
                    <description><![CDATA[Required only when configuring AUTO_INGEST for Google Cloud Storage or Microsoft Azure stages.
 Specifies the existing notification integration used to access the storage queue.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.ValidationMode">
            <description><![CDATA[]]></description>
            <parameters/>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.ValidationModeReturnErrors">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="validationErrorType">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.ValidationModeReturnMaxRows">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="maxRows">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.copyintolocation.FileFormatDefinitionByNameForCopyIntoLocation">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="fileFormatName">
                    <description><![CDATA[Specifies an existing named file format to use for unloading data from the table.
 The named file format determines the format type (CSV, JSON, PARQUET), as well as any other format options, for the data files.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.copyintolocation.FileFormatDefinitionByTypeOptionsForCopyIntoLocation">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="fileFormatOptionsForCopyIntoLocation">
                    <description><![CDATA[Specifies the type of files unloaded from the table.
 If a format type is specified, additional format-specific options can be specified.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.copyintolocation.FileFormatForCopyIntoLocation">
            <description><![CDATA[]]></description>
            <parameters/>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.copyintolocation.FileFormatOptionsCsvForCopyIntoLocation">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="compression">
                    <description><![CDATA[Specifies a compression algorithm to use for compressing the unloaded data files.]]></description>
                </parameter>
                <parameter name="recordDelimiter">
                    <description><![CDATA[One or more single-byte or multibyte characters that separate records in an input file or unloaded file.]]></description>
                </parameter>
                <parameter name="fieldDelimiter">
                    <description><![CDATA[One or more single-byte or multibyte characters that separate fields in an input file or unloaded file.]]></description>
                </parameter>
                <parameter name="fileExtension">
                    <description><![CDATA[String that specifies the extension for files unloaded to a stage. Accepts any extension. The user is responsible for specifying a valid file extension that can be read by the desired software or service.]]></description>
                </parameter>
                <parameter name="dateFormat">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="timeFormat">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="timestampFormat">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="binaryFormat">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="escapeCharacter">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="escapeUnenclosedFieldCharacter">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="fieldOptionallyEnclosedBy">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="nullIfs">
                    <description><![CDATA[Specifies a list of values from which Snowflake selects the first one to convert to from SQL NULL.]]></description>
                </parameter>
                <parameter name="emptyFieldAsNull">
                    <description><![CDATA[Used in combination with emptyFieldAsNull when set as false allows empty strings to be loaded in tables without enclosing the field values in quotes.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.copyintolocation.FileFormatOptionsForCopyIntoLocation">
            <description><![CDATA[]]></description>
            <parameters/>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.copyintolocation.FileFormatOptionsJsonForCopyIntoLocation">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="compression">
                    <description><![CDATA[Specifies a compression algorithm to use for compressing the unloaded data files.]]></description>
                </parameter>
                <parameter name="fileExtension">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.copyintolocation.FileFormatOptionsParquetForCopyIntoLocation">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="compression">
                    <description><![CDATA[Specifies a compression algorithm to use for compressing the unloaded data files.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.copyintotable.AmazonS3ExternalLocation">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="url">
                    <description><![CDATA[URL for the Amazon S3.]]></description>
                </parameter>
                <parameter name="amazonS3StorageIntegrationCredentials">
                    <description><![CDATA[The security credentials for connecting to AWS and accessing the private/protected S3 bucket where the files to load/unload are staged.]]></description>
                </parameter>
                <parameter name="encryption">
                    <description><![CDATA[Required only for loading from/unloading into encrypted files; not required if storage location and files are unencrypted.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.copyintotable.AmazonS3StorageIntegration">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="storageIntegrationName">
                    <description><![CDATA[Name of the storage integration used to delegate authentication responsibility for external cloud storage.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.copyintotable.AmazonS3StorageIntegrationCredentials">
            <description><![CDATA[]]></description>
            <parameters/>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.copyintotable.FileFormatDefinitionByNameForCopyIntoTable">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="fileFormatName">
                    <description><![CDATA[Specifies an existing named file format to use for loading data into the table.
 The named file format determines the format type (CSV, JSON, PARQUET), as well as any other format options, for the data files.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.copyintotable.FileFormatDefinitionByTypeOptionsForCopyIntoTable">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="fileFormatOptionsForCopyIntoTable">
                    <description><![CDATA[Specifies the type of files loaded into the table.
 If a format type is specified, additional format-specific options can be specified.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.copyintotable.FileFormatForCopyIntoTable">
            <description><![CDATA[]]></description>
            <parameters/>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.copyintotable.FileFormatOptionsAvroForCopyIntoTable">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="compression">
                    <description><![CDATA[Specifies a compression algorithm to use for compressing the unloaded data files.]]></description>
                </parameter>
                <parameter name="trimSpace">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="nullIfs">
                    <description><![CDATA[Specifies a list of values from which Snowflake selects the first one to convert to from SQL NULL.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.copyintotable.FileFormatOptionsCsvForCopyIntoTable">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="compression">
                    <description><![CDATA[Specifies a compression algorithm to use for compressing the unloaded data files.]]></description>
                </parameter>
                <parameter name="recordDelimiter">
                    <description><![CDATA[One or more single-byte or multibyte characters that separate records in an input file or unloaded file.]]></description>
                </parameter>
                <parameter name="fieldDelimiter">
                    <description><![CDATA[One or more single-byte or multibyte characters that separate records in an input file or unloaded file.]]></description>
                </parameter>
                <parameter name="skipHeaderCount">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="skipBlankLines">
                    <description><![CDATA[Specifies whether to skip any blank lines encountered in data, instead of resulting in an end-of-record error.]]></description>
                </parameter>
                <parameter name="dateFormat">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="timeFormat">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="timestampFormat">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="binaryFormat">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="escapeCharacter">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="escapeUnenclosedFieldCharacter">
                    <description><![CDATA[Specifies a single character used as the escape character for unenclosed field values only.]]></description>
                </parameter>
                <parameter name="trimSpace">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="fieldOptionallyEnclosedBy">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="nullIfs">
                    <description><![CDATA[Specifies a list of values from which Snowflake selects the first one to convert to from SQL NULL.]]></description>
                </parameter>
                <parameter name="errorOnColumnCountMismatch">
                    <description><![CDATA[Specifies whether to generate a parsing error if the number of delimited columns (i.e. fields) in an input file does not match the number of columns in the corresponding table.]]></description>
                </parameter>
                <parameter name="replaceInvalidCharacters">
                    <description><![CDATA[Specifies whether to replace invalid UTF-8 characters with a default Unicode character instead of resulting in an error.]]></description>
                </parameter>
                <parameter name="validateUTF8">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="emptyFieldAsNull">
                    <description><![CDATA[Used in combination with emptyFieldAsNull when set as false allows empty strings to be loaded in tables without enclosing the field values in quotes.]]></description>
                </parameter>
                <parameter name="skipByteOrderMark">
                    <description><![CDATA[Specifies whether to skip any byte order mark information from input files so that they wouldn't cause errors or be merged into the first table column.]]></description>
                </parameter>
                <parameter name="encoding">
                    <description><![CDATA[]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.copyintotable.FileFormatOptionsForCopyIntoTable">
            <description><![CDATA[]]></description>
            <parameters/>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.copyintotable.FileFormatOptionsJsonForCopyIntoTable">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="compression">
                    <description><![CDATA[Specifies a compression algorithm to use for compressing the unloaded data files.]]></description>
                </parameter>
                <parameter name="dateFormat">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="timeFormat">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="timestampFormat">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="binaryFormat">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="trimSpace">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="nullIfs">
                    <description><![CDATA[Specifies a list of values from which Snowflake selects the first one to convert to from SQL NULL.]]></description>
                </parameter>
                <parameter name="enableOctal">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="allowDuplicate">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="stripOuterArray">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="stripNullValues">
                    <description><![CDATA[Specifies that the JSON parser should remove object fields or array elements containing null values.]]></description>
                </parameter>
                <parameter name="ignoreUTF8Errors">
                    <description><![CDATA[Specifies whether to suppress UTF-8 encoding errors and silently replace with a default Unicode character.]]></description>
                </parameter>
                <parameter name="skipByteOrderMark">
                    <description><![CDATA[Specifies whether to skip any byte order mark information from input files so that they wouldn't cause errors or be merged into the first table column.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.copyintotable.FileFormatOptionsOrcForCopyIntoTable">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="trimSpace">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="nullIfs">
                    <description><![CDATA[Specifies a list of values from which Snowflake selects the first one to convert to from SQL NULL.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.copyintotable.FileFormatOptionsParquetForCopyIntoTable">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="compression">
                    <description><![CDATA[Specifies a compression algorithm to use for compressing the unloaded data files.]]></description>
                </parameter>
                <parameter name="binaryAsText">
                    <description><![CDATA[Specifies whether to interpret columns with no defined logical data type as UTF-8 text when set to True, or binary data when set to False.]]></description>
                </parameter>
                <parameter name="trimSpace">
                    <description><![CDATA[]]></description>
                </parameter>
                <parameter name="nullIfs">
                    <description><![CDATA[Specifies a list of values from which Snowflake selects the first one to convert to from SQL NULL.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.copyintotable.FileFormatOptionsXmlForCopyIntoTable">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="compression">
                    <description><![CDATA[Specifies a compression algorithm to use for compressing the unloaded data files.]]></description>
                </parameter>
                <parameter name="ignoreUTF8Errors">
                    <description><![CDATA[Specifies whether to suppress UTF-8 encoding errors and silently replace with a default Unicode character.]]></description>
                </parameter>
                <parameter name="preserveSpace">
                    <description><![CDATA[Specifies whether the XML parser preserves leading and trailing spaces in element content.]]></description>
                </parameter>
                <parameter name="stripOuterElement">
                    <description><![CDATA[Specifies whether the XML parser strips out the outer XML element, exposing 2nd level elements as separate documents.]]></description>
                </parameter>
                <parameter name="disableSnowflakeData">
                    <description><![CDATA[Specifies whether the XML parser disables recognition of Snowflake semi-structured data tags.]]></description>
                </parameter>
                <parameter name="disableAutoConvert">
                    <description><![CDATA[Specifies whether the XML parser disables automatic conversion of numeric and Boolean values from text to native representation.]]></description>
                </parameter>
                <parameter name="skipByteOrderMark">
                    <description><![CDATA[Specifies whether to skip any byte order mark information from input files so that they wouldn't cause errors or be merged into the first table column.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.copyintotable.MicrosoftAzureStorageIntegration">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="storageIntegrationName">
                    <description><![CDATA[Name of the storage integration used to delegate authentication responsibility for external cloud storage.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.copyintotable.MicrosoftAzureStorageIntegrationCredentials">
            <description><![CDATA[]]></description>
            <parameters/>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.encryption.AmazonS3Encryption">
            <description><![CDATA[]]></description>
            <parameters/>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.encryption.AwsCseAmazonS3Encryption">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="masterKey">
                    <description><![CDATA[Specifies the client-side master key used to encrypt the files in the bucket. The master key must be a 128-bit or 256-bit key in Base64-encoded form.
 Client-side encryption (requires a MASTER_KEY value). Currently, the client-side master key you provide can only be a symmetric key.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.encryption.AwsSseKmsAmazonS3Encryption">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="kmsKeyId">
                    <description><![CDATA[Optionally specifies the ID for the AWS KMS-managed key used to encrypt files unloaded into the bucket. If no value is provided, your default KMS key ID is used to encrypt files on unload.
 Note that this value is ignored for data loading.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.encryption.AwsSseS3AmazonS3Encryption">
            <description><![CDATA[]]></description>
            <parameters/>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.encryption.AzureCseMicrosoftAzureEncryption">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="masterKey">
                    <description><![CDATA[Specifies the client-side master key used to encrypt files. The master key must be a 128-bit or 256-bit key in Base64-encoded form.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.encryption.GcsSseMksGoogleCloudEncryption">
            <description><![CDATA[]]></description>
            <parameters>
                <parameter name="kmsKeyId">
                    <description><![CDATA[Key for Gcs Sse Mks encryption algorithm.]]></description>
                </parameter>
            </parameters>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.encryption.GoogleCloudEncryption">
            <description><![CDATA[]]></description>
            <parameters/>
        </type>
        <type name="com.mulesoft.connector.snowflake.api.params.encryption.MicrosoftAzureEncryption">
            <description><![CDATA[]]></description>
            <parameters/>
        </type>
    </types>
</extension-documentation>
